= RD-Switchboard Neo4j Browser =

*Explore the RD-Switchboard graph database*


== 3 Steps Compiling and Installation (Ubuntu 14.04 LTS) ==
This is the instruction for building the Neo4j Code on Ubuntu 14.04 LTS. 

* Step 1: Clone the repository 
```
git clone https://github.com/rd-switchboard/Neo4j-Browser.git
```

* Step 2: Run the prerequisite script to install all the required dependencies 
```
./Neo4j-Browser/code/prerequisite.ubuntu.14.04.x86_64.sh
```

* Step 3: Run the the build script
```
./Neo4j-Browser/code/build.2.3.1.sh
```

== Dependencies and Build on Other Operating Systems ==
If you intended to compile the code on operating systems other than Ubuntu 14.04, or you want to build the code manually, then the followings are the required dependencies for Neo4j.

The program will require JDK, Maven, Node.JS and NPM installed.

 * Install http://openjdk.java.net/[JKD]

```
# Update apt-get cache
sudo apt-get update

# (Optional) Check the packages avaliable
apt-cache search JDK

# Install JDK 1.7
sudo apt-get install openjdk-7-jdk

# (Optional) Check the Java version
java -version
```

 * Install https://maven.apache.org/[Maven]

```
# Install the package
sudo apt-get install maven

# (Optional) Check the Maven version
mvn -version
```

 * Install https://nodejs.org/[Node.JS]

```
# (Optional) Remove old Node installations, if they exist
sudo apt-get --purge remove node
sudo apt-get --purge remove nodejs

# Install the package
sudo apt-get install nodejs

# Add symlink to the node
sudo ln -s /usr/bin/nodejs /usr/bin/node

# (Optional) Check the Node.JS version
node --version
```

 * Install https://www.npmjs.com/[NPM]

```
# Install NPM
sudo apt-get install npm

# Install Grunt Client
sudo npm install -g grunt-cli

# Install Bower
sudo npm install -g bower

# Install NPM modules 
cd browser && npm install

# (Optional) Check the NPM version
npm -version
```

* Build

To build the project, execute `mvn clean package` or `mvn clean install`. The compiled jar file will be availiable in the target folder

* Offline Build

To build the project offline (for example on another machine), build the project once, then transfer the project folder and .m2 folder from your home directory into new machine.

Execute `mvn -o package` or `mvn -o install` for the offline build.



